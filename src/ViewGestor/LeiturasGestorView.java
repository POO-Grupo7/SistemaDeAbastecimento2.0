package ViewGestor;

import View.*;
import Controller.HistoricoHidrometroController;
import Controller.LeituraController;
import Model.ClienteModel;
import Model.HidrometroModel;
import Model.HistoricoHidrometroModel;
import Model.LeituraModel;
import View.table.TableCustom;
import com.formdev.flatlaf.FlatDarculaLaf;
import com.formdev.flatlaf.FlatDarkLaf;
import com.formdev.flatlaf.FlatIntelliJLaf;
import com.formdev.flatlaf.intellijthemes.FlatCyanLightIJTheme;
import com.formdev.flatlaf.intellijthemes.FlatGradiantoDeepOceanIJTheme;
import java.awt.Color;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Vector;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import net.miginfocom.swing.MigLayout;

public class LeiturasGestorView extends javax.swing.JFrame {

    public LeiturasGestorView() {
        initComponents();
        txtLeituraActual.requestFocus();
        LocalDate dataLocal = LocalDate.now();
        txtDataDeEmissao.setText("" + dataLocal);
        restaurarDadosComboBoxHidrometro();
        listarLeituras();
        testData(tabelaLeitura);
        getContentPane().setBackground(Color.white);
        TableCustom.apply(jScrollPane1, TableCustom.TableType.MULTI_LINE);
//        painelEsqDados.setLayout(new MigLayout());
//        painelEsqDados.add(lblId);
//        painelEsqDados.add(txtId, "wrap");
//        painelEsqDados.add(lblNome);
//        painelEsqDados.add(txtNome, "wrap, pushx, growx");

    }

    private void testData(JTable table) {
        DefaultTableModel model = (DefaultTableModel) table.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        painelPrincipal = new javax.swing.JPanel();
        painelCabecalho = new javax.swing.JPanel();
        lblCabecalho = new javax.swing.JLabel();
        txtNomeAPesquisar = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        painelConteudo = new javax.swing.JPanel();
        painelConteudoEsquerdo = new javax.swing.JPanel();
        lblIconLogo = new javax.swing.JLabel();
        painelVoltarMenu = new javax.swing.JPanel();
        btnVoltarMenu1 = new javax.swing.JButton();
        lblCabecalho1 = new javax.swing.JLabel();
        painelContCentral = new javax.swing.JPanel();
        painelSuperiorDados = new javax.swing.JPanel();
        painelEsqDados = new javax.swing.JPanel();
        lblId = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        cbxNrHidrometro = new javax.swing.JComboBox<>();
        lblNomeDoCliente = new javax.swing.JLabel();
        lblBairro = new javax.swing.JLabel();
        txtBairro = new javax.swing.JTextField();
        lblQuarterao = new javax.swing.JLabel();
        txtQuarterao = new javax.swing.JTextField();
        lblNumeroDaCasa = new javax.swing.JLabel();
        txtNumeroDeCasa = new javax.swing.JTextField();
        lblMesDeReferencia = new javax.swing.JLabel();
        cbxMesDeReferencia = new javax.swing.JComboBox<>();
        txtDataDeEmissao = new javax.swing.JTextField();
        lblDataDeEmissao = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNomeCliente = new javax.swing.JTextField();
        painelDirDados = new javax.swing.JPanel();
        lblLeituraAnterior = new javax.swing.JLabel();
        txtLeituraAnterior = new javax.swing.JTextField();
        txtLeituraActual = new javax.swing.JTextField();
        lblLeituraActual = new javax.swing.JLabel();
        lblConsumoDoMes = new javax.swing.JLabel();
        txtConsumoDoMes = new javax.swing.JTextField();
        txtOcorrencia = new javax.swing.JTextField();
        lblOcorrencia = new javax.swing.JLabel();
        lblNumeroDaLeitura = new javax.swing.JLabel();
        txtNumeroDaLeitura = new javax.swing.JTextField();
        txtSaldoActual = new javax.swing.JTextField();
        lblSaldoActual = new javax.swing.JLabel();
        btnApagados = new javax.swing.JButton();
        painelInferiorBotoesTabela = new javax.swing.JPanel();
        tabela = new javax.swing.JPanel();
        botoes = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaLeitura = new javax.swing.JTable();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenu3 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("LEITURAS");
        setMinimumSize(new java.awt.Dimension(1180, 650));

        painelPrincipal.setBackground(new java.awt.Color(255, 255, 255));
        painelPrincipal.setPreferredSize(new java.awt.Dimension(1260, 720));
        painelPrincipal.setLayout(new java.awt.BorderLayout());

        painelCabecalho.setBackground(new java.awt.Color(52, 102, 138));
        painelCabecalho.setForeground(new java.awt.Color(255, 255, 255));

        lblCabecalho.setFont(new java.awt.Font("Arial", 1, 40)); // NOI18N
        lblCabecalho.setForeground(new java.awt.Color(255, 255, 255));
        lblCabecalho.setText("Leituras");

        txtNomeAPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeAPesquisarActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/icons8_paid_search_32px.png"))); // NOI18N

        javax.swing.GroupLayout painelCabecalhoLayout = new javax.swing.GroupLayout(painelCabecalho);
        painelCabecalho.setLayout(painelCabecalhoLayout);
        painelCabecalhoLayout.setHorizontalGroup(
            painelCabecalhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCabecalhoLayout.createSequentialGroup()
                .addComponent(lblCabecalho)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 1071, Short.MAX_VALUE)
                .addComponent(txtNomeAPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(19, 19, 19))
        );
        painelCabecalhoLayout.setVerticalGroup(
            painelCabecalhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelCabecalhoLayout.createSequentialGroup()
                .addComponent(lblCabecalho)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelCabecalhoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelCabecalhoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(txtNomeAPesquisar))
                .addContainerGap())
        );

        painelPrincipal.add(painelCabecalho, java.awt.BorderLayout.NORTH);

        painelConteudo.setBackground(new java.awt.Color(255, 255, 255));
        painelConteudo.setAlignmentX(0.0F);
        painelConteudo.setAlignmentY(0.0F);
        painelConteudo.setInheritsPopupMenu(true);
        painelConteudo.setLayout(new java.awt.BorderLayout(10, 10));

        painelConteudoEsquerdo.setBackground(new java.awt.Color(52, 102, 138));
        painelConteudoEsquerdo.setLayout(new java.awt.BorderLayout());

        lblIconLogo.setBackground(new java.awt.Color(52, 102, 138));
        lblIconLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/images/social-media.png"))); // NOI18N
        painelConteudoEsquerdo.add(lblIconLogo, java.awt.BorderLayout.CENTER);

        painelVoltarMenu.setBackground(new java.awt.Color(52, 102, 138));

        btnVoltarMenu1.setBackground(new java.awt.Color(52, 102, 138));
        btnVoltarMenu1.setForeground(new java.awt.Color(52, 102, 138));
        btnVoltarMenu1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/View/icons/icons8-menu-48.png"))); // NOI18N
        btnVoltarMenu1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 102, 102), 2, true));
        btnVoltarMenu1.setContentAreaFilled(false);
        btnVoltarMenu1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnVoltarMenu1.setDisabledIcon(null);
        btnVoltarMenu1.setDisabledSelectedIcon(null);
        btnVoltarMenu1.setOpaque(true);
        btnVoltarMenu1.setSelected(true);
        btnVoltarMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnVoltarMenu1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnVoltarMenu1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnVoltarMenu1MouseExited(evt);
            }
        });
        btnVoltarMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarMenu1ActionPerformed(evt);
            }
        });
        painelVoltarMenu.add(btnVoltarMenu1);

        lblCabecalho1.setBackground(new java.awt.Color(52, 102, 138));
        lblCabecalho1.setFont(new java.awt.Font("Arial", 1, 36)); // NOI18N
        lblCabecalho1.setForeground(new java.awt.Color(255, 255, 255));
        lblCabecalho1.setText("Voltar");
        painelVoltarMenu.add(lblCabecalho1);

        painelConteudoEsquerdo.add(painelVoltarMenu, java.awt.BorderLayout.NORTH);

        painelConteudo.add(painelConteudoEsquerdo, java.awt.BorderLayout.WEST);

        painelContCentral.setBackground(new java.awt.Color(255, 255, 255));
        painelContCentral.setLayout(new java.awt.BorderLayout());

        painelSuperiorDados.setBackground(new java.awt.Color(255, 255, 255));
        painelSuperiorDados.setLayout(new java.awt.GridLayout(1, 2));

        painelEsqDados.setBackground(new java.awt.Color(255, 255, 255));
        painelEsqDados.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(13, 43, 64)));

        lblId.setText("Id:");

        txtId.setEditable(false);
        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });

        cbxNrHidrometro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione" }));
        cbxNrHidrometro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxNrHidrometroActionPerformed(evt);
            }
        });

        lblNomeDoCliente.setText("Hidrometro:*");

        lblBairro.setText("Bairro:*");

        txtBairro.setEditable(false);

        lblQuarterao.setText("Quarteirao:*");

        txtQuarterao.setEditable(false);
        txtQuarterao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuarteraoActionPerformed(evt);
            }
        });

        lblNumeroDaCasa.setText("Numero da Casa:*");

        txtNumeroDeCasa.setEditable(false);
        txtNumeroDeCasa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumeroDeCasaActionPerformed(evt);
            }
        });

        lblMesDeReferencia.setText("Mes de Referencia:*");

        cbxMesDeReferencia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Selecione", "Janeiro", "Fevereiro", "Marco", "Abril", "Maio", "Junho", "Julho", "Agosto", "Setembro", "Outubro", "Novembro", "Dezembro" }));
        cbxMesDeReferencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxMesDeReferenciaActionPerformed(evt);
            }
        });

        lblDataDeEmissao.setText("Data de Emissao:");

        jLabel2.setText("Cliente");

        txtNomeCliente.setEditable(false);

        javax.swing.GroupLayout painelEsqDadosLayout = new javax.swing.GroupLayout(painelEsqDados);
        painelEsqDados.setLayout(painelEsqDadosLayout);
        painelEsqDadosLayout.setHorizontalGroup(
            painelEsqDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelEsqDadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelEsqDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelEsqDadosLayout.createSequentialGroup()
                        .addGroup(painelEsqDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNomeDoCliente)
                            .addComponent(lblId)
                            .addComponent(jLabel2))
                        .addGap(61, 61, 61)
                        .addGroup(painelEsqDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbxNrHidrometro, 0, 403, Short.MAX_VALUE)))
                    .addGroup(painelEsqDadosLayout.createSequentialGroup()
                        .addGroup(painelEsqDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblBairro)
                            .addComponent(lblQuarterao)
                            .addComponent(lblMesDeReferencia)
                            .addComponent(lblDataDeEmissao)
                            .addComponent(lblNumeroDaCasa))
                        .addGap(27, 27, 27)
                        .addGroup(painelEsqDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDataDeEmissao, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNumeroDeCasa, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbxMesDeReferencia, 0, 403, Short.MAX_VALUE)
                            .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtQuarterao))))
                .addGap(42, 42, 42))
        );
        painelEsqDadosLayout.setVerticalGroup(
            painelEsqDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelEsqDadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelEsqDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelEsqDadosLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(lblId))
                    .addComponent(txtId, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painelEsqDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNomeDoCliente)
                    .addComponent(cbxNrHidrometro, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(painelEsqDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(painelEsqDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBairro)
                    .addComponent(txtBairro, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(painelEsqDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblQuarterao)
                    .addComponent(txtQuarterao, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painelEsqDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNumeroDaCasa)
                    .addComponent(txtNumeroDeCasa, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(painelEsqDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMesDeReferencia)
                    .addComponent(cbxMesDeReferencia, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(painelEsqDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDataDeEmissao)
                    .addComponent(txtDataDeEmissao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32))
        );

        painelSuperiorDados.add(painelEsqDados);

        painelDirDados.setBackground(new java.awt.Color(255, 255, 255));
        painelDirDados.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(13, 43, 64)));

        lblLeituraAnterior.setText("Leitura Anterior:");

        txtLeituraActual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLeituraActualActionPerformed(evt);
            }
        });

        lblLeituraActual.setText("Leitura Actual:*");

        lblConsumoDoMes.setText("Consumo do mes:");

        txtConsumoDoMes.setEditable(false);
        txtConsumoDoMes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtConsumoDoMesActionPerformed(evt);
            }
        });

        txtOcorrencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtOcorrenciaActionPerformed(evt);
            }
        });

        lblOcorrencia.setText("Ocorrencia:");

        lblNumeroDaLeitura.setText("Numero da Leitura:");

        txtNumeroDaLeitura.setEditable(false);
        txtNumeroDaLeitura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNumeroDaLeituraActionPerformed(evt);
            }
        });

        lblSaldoActual.setText("Saldo Actual:");

        btnApagados.setBackground(new java.awt.Color(255, 0, 51));
        btnApagados.setText("Ver Apagados");

        javax.swing.GroupLayout painelDirDadosLayout = new javax.swing.GroupLayout(painelDirDados);
        painelDirDados.setLayout(painelDirDadosLayout);
        painelDirDadosLayout.setHorizontalGroup(
            painelDirDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelDirDadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelDirDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelDirDadosLayout.createSequentialGroup()
                        .addComponent(lblLeituraAnterior)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 89, Short.MAX_VALUE)
                        .addComponent(txtLeituraAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelDirDadosLayout.createSequentialGroup()
                        .addGroup(painelDirDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblLeituraActual)
                            .addComponent(lblNumeroDaLeitura)
                            .addComponent(lblSaldoActual)
                            .addComponent(lblConsumoDoMes)
                            .addComponent(lblOcorrencia))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(painelDirDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelDirDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtLeituraActual, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
                                .addComponent(txtOcorrencia)
                                .addComponent(txtNumeroDaLeitura)
                                .addComponent(txtConsumoDoMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(painelDirDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(txtSaldoActual, javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(btnApagados, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                .addGap(179, 179, 179))
        );
        painelDirDadosLayout.setVerticalGroup(
            painelDirDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelDirDadosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelDirDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLeituraAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLeituraAnterior))
                .addGap(18, 18, 18)
                .addGroup(painelDirDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtLeituraActual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblLeituraActual, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(painelDirDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtConsumoDoMes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblConsumoDoMes))
                .addGap(18, 18, 18)
                .addGroup(painelDirDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtOcorrencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblOcorrencia))
                .addGap(18, 18, 18)
                .addGroup(painelDirDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNumeroDaLeitura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNumeroDaLeitura))
                .addGap(18, 18, 18)
                .addGroup(painelDirDadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSaldoActual)
                    .addComponent(txtSaldoActual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(btnApagados)
                .addContainerGap(70, Short.MAX_VALUE))
        );

        painelSuperiorDados.add(painelDirDados);

        painelContCentral.add(painelSuperiorDados, java.awt.BorderLayout.PAGE_START);

        painelInferiorBotoesTabela.setBackground(new java.awt.Color(255, 255, 255));
        painelInferiorBotoesTabela.setLayout(new java.awt.BorderLayout());

        tabela.setBackground(new java.awt.Color(255, 255, 255));
        tabela.setLayout(new java.awt.BorderLayout());

        botoes.setBackground(new java.awt.Color(255, 255, 255));
        java.awt.GridBagLayout botoesLayout = new java.awt.GridBagLayout();
        botoesLayout.columnWidths = new int[] {0};
        botoesLayout.rowHeights = new int[] {0};
        botoes.setLayout(botoesLayout);

        jButton6.setBackground(new java.awt.Color(52, 102, 138));
        jButton6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton6.setForeground(new java.awt.Color(255, 255, 255));
        jButton6.setText("Imprimir");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(25, 10, 25, 10);
        botoes.add(jButton6, gridBagConstraints);

        tabela.add(botoes, java.awt.BorderLayout.PAGE_START);

        tabelaLeitura.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tabelaLeitura.setForeground(new java.awt.Color(255, 255, 255));
        tabelaLeitura.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Numero de Hidrometro", "Nome do cliente", "Bairro", "Quarterao", "Numero da casa", "Mes de Referencia", "Data de Emissao ", "Leitura Anterior", "Leitura Actual", "Consumo do mes", "Ocorrencia", "Numero de Leitura"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabelaLeitura);

        tabela.add(jScrollPane1, java.awt.BorderLayout.CENTER);

        painelInferiorBotoesTabela.add(tabela, java.awt.BorderLayout.CENTER);

        painelContCentral.add(painelInferiorBotoesTabela, java.awt.BorderLayout.CENTER);

        painelConteudo.add(painelContCentral, java.awt.BorderLayout.CENTER);

        painelPrincipal.add(painelConteudo, java.awt.BorderLayout.CENTER);

        getContentPane().add(painelPrincipal, java.awt.BorderLayout.CENTER);

        jMenuBar1.setAlignmentY(0.5F);
        jMenuBar1.setBorderPainted(false);
        jMenuBar1.setFont(new java.awt.Font("Segoe UI", 1, 13)); // NOI18N

        jMenu2.setText("File");
        jMenuBar1.add(jMenu2);

        jMenu3.setText("Edit");
        jMenuBar1.add(jMenu3);

        setJMenuBar(jMenuBar1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        salvarLeitura();
        listarLeituras();
        limparCampos();
    }//GEN-LAST:event_jButton6ActionPerformed

    private void txtNomeAPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeAPesquisarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeAPesquisarActionPerformed

    private void cbxNrHidrometroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxNrHidrometroActionPerformed
        accaoComboxHidrometro();
    }//GEN-LAST:event_cbxNrHidrometroActionPerformed

    private void txtQuarteraoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuarteraoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuarteraoActionPerformed

    private void txtNumeroDeCasaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumeroDeCasaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumeroDeCasaActionPerformed

    private void cbxMesDeReferenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxMesDeReferenciaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxMesDeReferenciaActionPerformed

    private void txtLeituraActualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLeituraActualActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLeituraActualActionPerformed

    private void txtConsumoDoMesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtConsumoDoMesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtConsumoDoMesActionPerformed

    private void txtOcorrenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtOcorrenciaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtOcorrenciaActionPerformed

    private void txtNumeroDaLeituraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNumeroDaLeituraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNumeroDaLeituraActionPerformed

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdActionPerformed

    private void btnVoltarMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVoltarMenu1MouseClicked
        btnVoltarMenu1.setBackground(new Color(52, 102, 138));
    }//GEN-LAST:event_btnVoltarMenu1MouseClicked

    private void btnVoltarMenu1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVoltarMenu1MouseEntered
        btnVoltarMenu1.setBackground(new Color(45, 45, 45));
    }//GEN-LAST:event_btnVoltarMenu1MouseEntered

    private void btnVoltarMenu1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVoltarMenu1MouseExited
        btnVoltarMenu1.setBackground(new Color(52, 102, 138));
    }//GEN-LAST:event_btnVoltarMenu1MouseExited

    private void btnVoltarMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarMenu1ActionPerformed
        new MenuGestorView().setVisible(true);
        dispose();
    }//GEN-LAST:event_btnVoltarMenu1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            FlatCyanLightIJTheme.setup();
//            UIManager.setLookAndFeel(new FlatDarkLaf());
        } catch (Exception e) {
            e.printStackTrace();
        }
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new LeiturasGestorView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel botoes;
    private javax.swing.JButton btnApagados;
    private javax.swing.JButton btnVoltarMenu1;
    private javax.swing.JComboBox<String> cbxMesDeReferencia;
    private javax.swing.JComboBox<String> cbxNrHidrometro;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBairro;
    private javax.swing.JLabel lblCabecalho;
    private javax.swing.JLabel lblCabecalho1;
    private javax.swing.JLabel lblConsumoDoMes;
    private javax.swing.JLabel lblDataDeEmissao;
    private javax.swing.JLabel lblIconLogo;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblLeituraActual;
    private javax.swing.JLabel lblLeituraAnterior;
    private javax.swing.JLabel lblMesDeReferencia;
    private javax.swing.JLabel lblNomeDoCliente;
    private javax.swing.JLabel lblNumeroDaCasa;
    private javax.swing.JLabel lblNumeroDaLeitura;
    private javax.swing.JLabel lblOcorrencia;
    private javax.swing.JLabel lblQuarterao;
    private javax.swing.JLabel lblSaldoActual;
    private javax.swing.JPanel painelCabecalho;
    private javax.swing.JPanel painelContCentral;
    private javax.swing.JPanel painelConteudo;
    private javax.swing.JPanel painelConteudoEsquerdo;
    private javax.swing.JPanel painelDirDados;
    private javax.swing.JPanel painelEsqDados;
    private javax.swing.JPanel painelInferiorBotoesTabela;
    private javax.swing.JPanel painelPrincipal;
    private javax.swing.JPanel painelSuperiorDados;
    private javax.swing.JPanel painelVoltarMenu;
    private javax.swing.JPanel tabela;
    private javax.swing.JTable tabelaLeitura;
    private javax.swing.JTextField txtBairro;
    private javax.swing.JTextField txtConsumoDoMes;
    private javax.swing.JTextField txtDataDeEmissao;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtLeituraActual;
    private javax.swing.JTextField txtLeituraAnterior;
    private javax.swing.JTextField txtNomeAPesquisar;
    private javax.swing.JTextField txtNomeCliente;
    private javax.swing.JTextField txtNumeroDaLeitura;
    private javax.swing.JTextField txtNumeroDeCasa;
    private javax.swing.JTextField txtOcorrencia;
    private javax.swing.JTextField txtQuarterao;
    private javax.swing.JTextField txtSaldoActual;
    // End of variables declaration//GEN-END:variables

    //Accao para o JcomboxClientes
//    Vector<Integer> idCliente = new Vector<Integer>();
    Vector<Integer> idHistoricoHidrometro = new Vector<Integer>();

    //Metodo que pega clientes activos na BD para jcboxClientes
    private void restaurarDadosComboBoxHidrometro() {
        try {
            LeituraController leituraController = new LeituraController();
            ResultSet rs = leituraController.listarHidrometros();

            while (rs.next()) {
                idHistoricoHidrometro.addElement(rs.getInt(1));
                cbxNrHidrometro.addItem(rs.getString(8));
            }
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "ListarHidrometros na LeiturasView" + erro);
        }
    }

    private void accaoComboxHidrometro() {
        if (cbxNrHidrometro.getSelectedIndex() == 0) {
            txtNomeCliente.setText("");
            txtBairro.setText("");
            txtQuarterao.setText("");
            txtNumeroDeCasa.setText("");
            txtSaldoActual.setText("");
            return;
        }
        try {
            LeituraController leituraController = new LeituraController();
            ResultSet rs = leituraController.PesquisarHidrometro(idHistoricoHidrometro.get(cbxNrHidrometro.getSelectedIndex() - 1));

            while (rs.next()) {
                txtNomeCliente.setText(rs.getString(2));
                txtBairro.setText(rs.getString(3));
                txtQuarterao.setText(rs.getString(4));
                txtNumeroDeCasa.setText(rs.getString(5));
//                txtSaldoActual.setText(rs.getString(10));
            }
        } catch (SQLException erro) {
            JOptionPane.showMessageDialog(null, "LeituraView pegar valores do NrHidrometro na tabela HistHidrom" + erro);
        }
    }

    //Salvar Leitura
    private void salvarLeitura() {
        String nrHidrometro = cbxNrHidrometro.getSelectedItem().toString();
        String nomeCliente = txtNomeCliente.getText();
        String bairro = txtBairro.getText();
        int quarteirao = Integer.parseInt(txtQuarterao.getText());
        int nrDaCasa = Integer.parseInt(txtNumeroDeCasa.getText());
        String mes = cbxMesDeReferencia.getSelectedItem().toString();
        String data = txtDataDeEmissao.getText();
        double leitAnterior = Double.parseDouble(txtLeituraAnterior.getText());
        double leituraActual = Double.parseDouble(txtLeituraActual.getText());
        if (leituraActual < leitAnterior) {
            JOptionPane.showMessageDialog(null, "A leitura actual não pode ser inferior a anterior. Preencha correctamente o campo!");
//            limparCampos();
        }
        double calculoConsumoMes = (leituraActual - leitAnterior);
        BigDecimal bd = new BigDecimal(calculoConsumoMes).setScale(3, RoundingMode.HALF_UP);
        double consumoMes = bd.doubleValue();
        txtConsumoDoMes.setText(consumoMes + "");

        String ocorrencia = txtOcorrencia.getText();

        // Define o número da  leitura
        String nrLeitura = mes + "/" + nrHidrometro;

        LeituraModel leituraModel = new LeituraModel();

        ClienteModel cliente = new ClienteModel();
        cliente.setNome(nomeCliente);
        cliente.setBairro(bairro);
        cliente.setQuarteirao(quarteirao);
        cliente.setNrDaCasa(nrDaCasa);

        HidrometroModel hidrometroModel = new HidrometroModel();
        hidrometroModel.setNrHidrometro(nrHidrometro);

        HistoricoHidrometroModel historicoHidrometroModel = new HistoricoHidrometroModel();
        historicoHidrometroModel.setCliente(cliente);
        historicoHidrometroModel.setHidrometro(hidrometroModel);
        leituraModel.setHistoricoHidrometro(historicoHidrometroModel);
        leituraModel.setMesReferencia(mes);
        leituraModel.setDataEmissao(data);
        leituraModel.setLeituraAnterior(leitAnterior);
        leituraModel.setLeituraActual(leituraActual);
        leituraModel.setConsumoMes(consumoMes);
        leituraModel.setOcorrencia(ocorrencia);
        leituraModel.setNrLeitura(nrLeitura);
        LeituraController leituraControler = new LeituraController();
        leituraControler.cadastrarLeitura(leituraModel);
    }

    //Metodo para Listar Leituras
    private void listarLeituras() {
        try {
            LeituraController leituraController = new LeituraController();

            DefaultTableModel model = (DefaultTableModel) tabelaLeitura.getModel();
            model.setRowCount(0);

            ArrayList<LeituraModel> lista = leituraController.listarLeituras();
            System.out.println("leituras encontrados: " + lista.size());
            System.out.println(lista.isEmpty());

            for (LeituraModel item : lista) {
                model.addRow(new Object[]{
                    item.getIdLeitura(),
                    item.getHistoricoHidrometro().getHidrometro().getNrHidrometro(),
                    item.getHistoricoHidrometro().getCliente().getNome(),
                    item.getHistoricoHidrometro().getCliente().getBairro(),
                    item.getHistoricoHidrometro().getCliente().getQuarteirao(), // Certifique-se de usar o índice correto
                    item.getHistoricoHidrometro().getCliente().getNrDaCasa(), // Certifique-se de usar o índice correto
                    item.getMesReferencia(),
                    item.getDataEmissao(),
                    item.getLeituraAnterior(),
                    item.getLeituraActual(),
                    item.getConsumoMes(),
                    item.getOcorrencia(),
                    item.getNrLeitura(),
                    item.getStatusLeitura()
                });
            }
        } catch (Exception erro) {
            JOptionPane.showMessageDialog(null, "Erro ao listar leituras: " + erro.getMessage());
        }
    }

    //Metodo Limpar Campos
    private void limparCampos() {
        txtId.setText("");
        cbxNrHidrometro.setSelectedIndex(0);
        txtNomeCliente.setText("");
        txtBairro.setText("");
        txtQuarterao.setText("");
        txtNumeroDeCasa.setText("");
        cbxMesDeReferencia.setSelectedIndex(0);
        txtDataDeEmissao.setText("");
        txtLeituraAnterior.setText("");
        txtLeituraActual.setText("");
        txtConsumoDoMes.setText("");
        txtOcorrencia.setText("");
        txtNumeroDaLeitura.setText("");
        txtLeituraActual.requestFocus();
    }

    //Metodo Carregar Campos
    private void CarregarCampos() {
        int setar = tabelaLeitura.getSelectedRow();

        txtId.setText(tabelaLeitura.getModel().getValueAt(setar, 0).toString());
        cbxNrHidrometro.setSelectedItem(tabelaLeitura.getModel().getValueAt(setar, 1).toString());
        txtNomeCliente.setText(tabelaLeitura.getModel().getValueAt(setar, 2).toString());
        txtBairro.setText(tabelaLeitura.getModel().getValueAt(setar, 3).toString());
        txtQuarterao.setText(tabelaLeitura.getModel().getValueAt(setar, 4).toString());
        txtNumeroDeCasa.setText(tabelaLeitura.getModel().getValueAt(setar, 5).toString());
        cbxMesDeReferencia.setSelectedItem(tabelaLeitura.getModel().getValueAt(setar, 6).toString());
        txtDataDeEmissao.setText(tabelaLeitura.getModel().getValueAt(setar, 7).toString());
        txtLeituraAnterior.setText(tabelaLeitura.getModel().getValueAt(setar, 8).toString());
        txtLeituraActual.setText(tabelaLeitura.getModel().getValueAt(setar, 9).toString());
        txtConsumoDoMes.setText(tabelaLeitura.getModel().getValueAt(setar, 10).toString());
        txtOcorrencia.setText(tabelaLeitura.getModel().getValueAt(setar, 11).toString());
        txtNumeroDaLeitura.setText(tabelaLeitura.getModel().getValueAt(setar, 12).toString());
    }

    //Metodo Actualizar Leitura
    private void actualizarLeitura() {
        int idLeitura = Integer.parseInt(txtId.getText());
        String nrHidrometro = cbxNrHidrometro.getSelectedItem().toString();
        String nomeCliente = txtNomeCliente.getText();
        String bairro = txtBairro.getText();
        int quarteirao = Integer.parseInt(txtQuarterao.getText());
        int nrDaCasa = Integer.parseInt(txtNumeroDeCasa.getText());
        String mes = cbxMesDeReferencia.getSelectedItem().toString();
        String data = txtDataDeEmissao.getText();
        double leitAnterior = Double.parseDouble(txtLeituraAnterior.getText());
        double leituraActual = Double.parseDouble(txtLeituraActual.getText());
        if (leituraActual < leitAnterior) {
            JOptionPane.showMessageDialog(null, "A leitura actual não pode ser inferior a anterior. Preencha correctamente o campo!");
            limparCampos();
        }
        double calculoConsumoMes = (leituraActual - leitAnterior);
        BigDecimal bd = new BigDecimal(calculoConsumoMes).setScale(3, RoundingMode.HALF_UP);
        double consumoMes = bd.doubleValue();
        txtConsumoDoMes.setText(consumoMes + "");

        String ocorrencia = txtOcorrencia.getText();

        // Define o número da  leitura
        String nrLeitura = mes + "/" + nrHidrometro;

        LeituraModel leituraModel = new LeituraModel();
        leituraModel.setIdLeitura(idLeitura);

        ClienteModel cliente = new ClienteModel();
        cliente.setNome(nomeCliente);
        cliente.setBairro(bairro);
        cliente.setQuarteirao(quarteirao);
        cliente.setNrDaCasa(nrDaCasa);

        HidrometroModel hidrometroModel = new HidrometroModel();
        hidrometroModel.setNrHidrometro(nrHidrometro);

        HistoricoHidrometroModel historicoHidrometroModel = new HistoricoHidrometroModel();
        historicoHidrometroModel.setCliente(cliente);
        historicoHidrometroModel.setHidrometro(hidrometroModel);
        leituraModel.setHistoricoHidrometro(historicoHidrometroModel);
        leituraModel.setMesReferencia(mes);
        leituraModel.setDataEmissao(data);
        leituraModel.setLeituraAnterior(leitAnterior);
        leituraModel.setLeituraActual(leituraActual);
        leituraModel.setConsumoMes(consumoMes);
        leituraModel.setOcorrencia(ocorrencia);
        leituraModel.setNrLeitura(nrLeitura);
        leituraModel.setStatusLeitura(true);

        LeituraController leituraControler = new LeituraController();
        leituraControler.actualizarLeitura(leituraModel);
    }
    //Metodo Apagar Leitura

    private void apagarLeitura() {
        int idLeitura = Integer.parseInt(txtId.getText());
        String nrHidrometro = cbxNrHidrometro.getSelectedItem().toString();
        String nomeCliente = txtNomeCliente.getText();
        String bairro = txtBairro.getText();
        int quarteirao = Integer.parseInt(txtQuarterao.getText());
        int nrDaCasa = Integer.parseInt(txtNumeroDeCasa.getText());
        String mes = cbxMesDeReferencia.getSelectedItem().toString();
        String data = txtDataDeEmissao.getText();
        double leitAnterior = Double.parseDouble(txtLeituraAnterior.getText());
        double leituraActual = Double.parseDouble(txtLeituraActual.getText());
        if (leituraActual < leitAnterior) {
            JOptionPane.showMessageDialog(null, "A leitura actual não pode ser inferior a anterior. Preencha correctamente o campo!");
            limparCampos();
        }
        double calculoConsumoMes = (leituraActual - leitAnterior);
        BigDecimal bd = new BigDecimal(calculoConsumoMes).setScale(3, RoundingMode.HALF_UP);
        double consumoMes = bd.doubleValue();
        txtConsumoDoMes.setText(consumoMes + "");

        String ocorrencia = txtOcorrencia.getText();

        // Define o número da  leitura
        String nrLeitura = mes + "/" + nrHidrometro;

        LeituraModel leituraModel = new LeituraModel();
        leituraModel.setIdLeitura(idLeitura);

        ClienteModel cliente = new ClienteModel();
        cliente.setNome(nomeCliente);
        cliente.setBairro(bairro);
        cliente.setQuarteirao(quarteirao);
        cliente.setNrDaCasa(nrDaCasa);

        HidrometroModel hidrometroModel = new HidrometroModel();
        hidrometroModel.setNrHidrometro(nrHidrometro);

        HistoricoHidrometroModel historicoHidrometroModel = new HistoricoHidrometroModel();
        historicoHidrometroModel.setCliente(cliente);
        historicoHidrometroModel.setHidrometro(hidrometroModel);
        leituraModel.setHistoricoHidrometro(historicoHidrometroModel);
        leituraModel.setMesReferencia(mes);
        leituraModel.setDataEmissao(data);
        leituraModel.setLeituraAnterior(leitAnterior);
        leituraModel.setLeituraActual(leituraActual);
        leituraModel.setConsumoMes(consumoMes);
        leituraModel.setOcorrencia(ocorrencia);
        leituraModel.setNrLeitura(nrLeitura);
        leituraModel.setStatusLeitura(false);

        LeituraController leituraControler = new LeituraController();
        leituraControler.apagarLeitura(leituraModel);
    }

}
